{"version":3,"sources":["utils/peerconn.js","checks/helpers/rpc.js","checks/peerConnection.js","utils/user_media.js","utils/media_stream_tools.js","checks/mediaCapture.js","checks/internet.js","checks/count_devices.js","checks/feature_support.js","checks/turnPerformace.js","utils/simplify_promise.js","utils/dom_tag_tools.js","index.js"],"names":["createRTCPeerConnection","configuration","window","RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","peerTransfer","rtcConfig","payload","verbose","timeout","Promise","resolve","reject","rtc1","rtc2","dc","createDataChannel","_ts","Date","now","_to","Number","isInteger","setTimeout","Error","addEventListener","ice","candidate","console","log","addIceCandidate","evt","channel","msg","data","_rcvTS","_bin","Blob","close","clearTimeout","elapsed","size","send","createOffer","then","offer","setLocalDescription","setRemoteDescription","createAnswer","answer","catch","e1","e2","e3","checkPeerConnection","testData","getUserMedia","constraints","audio","video","_success","stream","_err","err","navigator","mediaDevices","webkitGetUserMedia","mozGetUserMedia","stopMediaStream","tracks","getTracks","Array","prototype","forEach","call","_track","stop","length","stopMediaStreamSilent","e","checkMediaCapture","getStream","active","audioTrack","videoTrack","functional","every","kind","readyState","_stream","checkInternetSpeed","checkerFile","fetch","startTime","glue","test","resp","status","blob","bl","endTime","timeDiff","mbps","toFixed","parseFloat","countDevices","result","in","out","unknown","enumerateDevices","devices","_d","checkFeatureSupport","basic","webAudio","rtcPeerConnection","rtcDataChannel","getDisplayMedia","document","createElement","play","checkRelayPerformance","JSON","stringify","iceTransportPolicy","i","String","fromCharCode","Math","floor","random","transferSize","speed","_promise","addStreamToDOM","domElement","undefined","srcObject","src","URL","createObjectURL","removeStreamFromDOM","module","exports","checkPeerConnectionSilent","checkMediaCaptureSilent","checkInternetSpeedSilent","countDeviesSilent","getUserMediaSilent","checkRelayPerformanceSilent","utils","flat","dom","mediaStream"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["export default function createRTCPeerConnection(configuration){\n    if(window.RTCPeerConnection) return new RTCPeerConnection(configuration);\n    else if(window.webkitRTCPeerConnection) return new webkitRTCPeerConnection(configuration);\n    else if(window.mozRTCPeerConnection) return new mozRTCPeerConnection(configuration);\n    else return null;\n}","import createRTCPeerConnection from \"../../utils/peerconn\";\nexport default function peerTransfer(rtcConfig, payload, verbose = false, timeout = 30000){\n    return new Promise((resolve,reject)=>{\n        let rtc1 = createRTCPeerConnection(rtcConfig);\n        let rtc2 = createRTCPeerConnection(rtcConfig);\n        let dc   = rtc1.createDataChannel(\"sender\");\n        let _ts  = Date.now();\n        let _to  = null;\n        if(timeout && Number.isInteger(timeout)) _to = setTimeout(()=>reject(new Error(`Timeout of ${timeout}ms reached`)), timeout);\n        rtc1.addEventListener(\"icecandidate\",ice=>{\n            if(!ice.candidate) return false;\n            verbose && console.log(\"[peer-connection]: First Peer Generated Candidate:\",ice.candidate);\n            rtc2.addIceCandidate(ice.candidate);\n        });\n        rtc2.addEventListener(\"icecandidate\",ice=>{\n            if(!ice.candidate) return false;\n            verbose && console.log(\"[peer-connection]: Second Peer Generated Candidate:\",ice.candidate);\n            rtc1.addIceCandidate(ice.candidate);\n        });\n        rtc2.addEventListener(\"datachannel\",evt=>{\n            evt.channel.addEventListener(\"message\",(msg)=>{\n                verbose && console.log(\"[peer-connection]: Message Transmission successful\");\n                if(msg.data === payload){\n                    let _rcvTS = Date.now();\n                    let _bin   = new Blob([msg.data]);\n                    rtc1.close();\n                    rtc2.close();\n                    if(_to) clearTimeout(_to);\n                    return resolve({\n                        elapsed : _rcvTS - _ts,\n                        size    : _bin.size\n                    });\n                }\n                if(_to) clearTimeout(_to);\n                return reject(new Error(\"message integrity failure\"));\n            });\n        });\n        dc.addEventListener(\"open\", ()=>dc.send(payload));\n        rtc1.createOffer()\n            .then(offer=>{\n                verbose && console.log(\"[peer-connection]: First peer connection created RTC offer\");\n                rtc1.setLocalDescription(offer)\n                    .then(()=>rtc2.setRemoteDescription(offer))\n                    .then(()=>rtc2.createAnswer()\n                        .then(answer=>{\n                            verbose && console.log(\"[peer-connection]: Seocond peer connection created RTC answer\");\n                            rtc2.setLocalDescription(answer)\n                                .then(rtc1.setRemoteDescription(answer))\n                                .catch(e1=>{\n                                    if(_to) clearTimeout(_to);\n                                    reject(e1);\n                                });\n                        }).catch(e2=>{\n                            if(_to) clearTimeout(_to);\n                            reject(e2);\n                        }));\n            }).catch(e3=>{\n                if(_to) clearTimeout(_to);\n                reject(e3);\n            });\n    });\n}","import peerTransfer from \"./helpers/rpc\";\nexport default function checkPeerConnection(rtcConfig = {}, verbose = false, timeout = 30000){\n    let testData = `test_${Date.now()}`;\n    return peerTransfer(rtcConfig, testData, verbose, timeout);\n}","export default function getUserMedia(constraints, verbose = false){\n    return new Promise((resolve,reject)=>{\n        if(!constraints.audio && !constraints.video) return reject(new Error(\"Audio Video Constraints inappropriate\"));\n        const _success = (stream) => resolve(stream);\n        const _err     = (err) => reject(err);\n        if(navigator.mediaDevices.getUserMedia){\n            verbose && console.log(`[get-user-media]: Using mediaDevices.getUserMedia`);\n            navigator.mediaDevices.getUserMedia(constraints).then(resolve).catch(reject);\n        }\n        else if(navigator.getUserMedia){\n            verbose && console.log(`[get-user-media]: Using navigator.getUserMedia`);\n            navigator.getUserMedia(constraints, _success, _err);\n        }\n        else if(navigator.webkitGetUserMedia){\n            verbose && console.log(`[get-user-media]: Using navigator.webkitGetUserMedia`);\n            navigator.webkitGetUserMedia(constraints, _success, _err);\n        }\n        else if(navigator.mozGetUserMedia){\n            verbose && console.log(`[get-user-media]: Using navigator.mozGetUserMedia`);\n            navigator.mozGetUserMedia(constraints, _success, _err);\n        }\n        else reject(new Error(\"No version of getusermedia was found\"));\n    });\n}","function stopMediaStream(stream){\n    if(!stream) return null;\n    let tracks = stream.getTracks();\n    Array.prototype.forEach.call(tracks, _track=>_track.stop());\n    return tracks.length;\n}\nfunction stopMediaStreamSilent(stream){\n    try{\n        return stopMediaStream(stream);\n    }\n    catch(e){\n        return 0;\n    }\n}\nexport {\n    stopMediaStream,\n    stopMediaStreamSilent\n}","import getUserMedia from \"../utils/user_media\";\nimport * as _stream from \"../utils/media_stream_tools\";\nexport default function checkMediaCapture(constraints, verbose = false, getStream = false, timeout = 60000){\n    return new Promise((resolve,reject)=>{\n        if(!constraints.audio && !constraints.video) return reject(new Error(\"Constraints are not correct\"));\n        verbose && console.log(`[media-capture]: Requesting user media`);\n        let _to         = null;\n        if(timeout && Number.isInteger(timeout)) _to = setTimeout(()=>reject(new Error(`Timeout of ${timeout}ms reached`)), timeout);\n        getUserMedia(constraints, verbose)\n            .then(stream=>{\n                verbose && console.log(`[media-capture]: Received media Stream`);\n                if(stream.active){\n                    let tracks     = stream.getTracks();\n                    var audioTrack = false; // check by default\n                    var videoTrack = false; // check by default\n                    let functional = [].every.call(tracks,_track=>{\n                        if(_track.kind === \"audio\") audioTrack = true;\n                        if(_track.kind === \"video\") videoTrack = true;\n                        return (_track.readyState === \"live\");\n                    });\n                    verbose && console.log(`[media-capture]: Received ${tracks.length} track(s)`);\n                    if(!functional){\n                        _stream.stopMediaStream(stream);\n                        if(_to) clearTimeout(_to);\n                        return reject(new Error(\"All requested tracks are not active\"));\n                    } \n                    if(constraints.video && !videoTrack) {\n                        _stream.stopMediaStream(stream);\n                        if(_to) clearTimeout(_to);\n                        return reject(new Error(\"Video Track not found\"));\n                    }\n                    if(constraints.audio && !audioTrack){\n                        _stream.stopMediaStream(stream);\n                        if(_to) clearTimeout(_to);\n                        return reject(new Error(\"Audio Track not found\"));\n                    } \n                    if(!getStream){\n                        verbose && console.log(`[media-capture]: Stopping media track(s)`);\n                        _stream.stopMediaStream(stream);\n                    }\n                    if(_to) clearTimeout(_to);\n                    if(getStream) return resolve(stream);\n                    return resolve(true);\n                }\n                else{\n                    if(_to) clearTimeout(_to);\n                    return reject(new Error(\"Stream not active\"));\n                }\n            })\n            .catch(e=>{\n                if(_to) clearTimeout(_to);\n                reject(e);\n            });\n    });\n}","export default function checkInternetSpeed(checkerFile, verbose = false){\n    return new Promise((resolve,reject)=>{\n        if(!checkerFile) return reject(new Error(\"Please provide a filename to download and check internet\"));\n        if(typeof fetch !== \"function\") return reject(new Error(\"Fetch API support is required for this check\"));\n        verbose && console.log(`[internet-connection]: Will fetch the check file`);\n        let startTime = Date.now();\n        let glue = /\\?/.test(checkerFile)?\"&\":\"?\"; // if the file path already has query params\n        fetch(`${checkerFile}${glue}rtccheckertimestamp_noconflict=${startTime}`) // to avoid cache\n            .then(resp=>{\n                if(resp.status !== 200) return reject(new Error(\"Error loading the checker file\"));\n                return resp.blob();\n            }).then(bl=>{\n                verbose && console.log(`[internet-connection]: Fetched the checker file`);\n                let endTime  = Date.now();\n                let timeDiff = (endTime - startTime) / 1000; //convert millesecond diff to seconds\n                let fileSize = bl.size * 8; // bits\n                let bps      = fileSize / timeDiff;\n                let mbps     = (bps / 1048576).toFixed(2); // 1024*1024 = 1048576\n                verbose && console.log(`[internet-connection]: Speed observed: ${mbps}mbps`);\n                return resolve(parseFloat(mbps));\n            })\n            .catch(reject);\n    });\n}","export default function countDevices(verbose = false){\n    return new Promise((resolve,reject)=>{\n        let result = {\n            audio   : {in: 0, out: 0},\n            video   : {in: 0, out: 0},\n            unknown : 0\n        }\n        verbose && console.log(`[count-devices]: Requesting device list`);\n        navigator.mediaDevices.enumerateDevices()\n            .then(devices=>{\n                verbose && console.log(`[count-devices]: Received device list. Total devices: ${devices.length}`);\n                Array.prototype.forEach.call(devices,_d=>{\n                    switch(_d.kind){\n                    case \"audioinput\":\n                        result.audio.in ++;\n                        break;\n                    case \"audiooutput\":\n                        result.audio.out ++;\n                        break;\n                    case \"videoinput\":\n                        result.video.in ++;\n                        break;\n                    case \"videooutput\":\n                        result.video.out ++; // doesnt work\n                        break;\n                    default:\n                        result.unknown ++;\n                    }\n                });\n                return resolve(result);\n            })\n            .catch(reject);\n    });\n}","export default function checkFeatureSupport(verbose = false){\n    let result = {\n        video             : {\n            basic   : false\n        },\n        audio             : {\n            basic    : false,\n            webAudio : false\n        },\n        rtcPeerConnection : false,\n        rtcDataChannel    : false,\n        getUserMedia      : false,\n        getDisplayMedia   : false\n    }\n    // check video\n    verbose && console.log(`[feature-test] Checking for video availability`);\n    let vid = document.createElement(\"video\");\n    if(typeof vid.play === \"function\") result.video.basic = true;\n    // check Audio\n    verbose && console.log(`[feature-test] Checking for audio availability`);\n    let aud = document.createElement(\"audio\");\n    if(typeof aud.play === \"function\") result.audio.basic    = true;\n    verbose && console.log(`[feature-test] Checking for web-audio API availability`);\n    if(\"AudioContext\" in window) result.audio.webAudio       = true;\n    else if(\"webkitAudioContext\" in window) result.audio.webAudio = \"prefix-webkit\";\n    // check getUserMedia\n    verbose && console.log(`[feature-test] Checking for getUserMedia`);\n    if((navigator && \"mediaDevices\" in navigator && \"getUserMedia\" in navigator.mediaDevices)) result.getUserMedia = true;\n    else if(navigator && \"getUserMedia\" in navigator) result.getUserMedia = \"old\";\n    else if(\"webkitGetUserMedia\" in navigator) result.getUserMedia = \"prefix-webkit\";\n    else if(\"mozGetUserMedia\" in navigator) result.getUserMedia = \"prefix-moz\";\n    // Check GetDisplayMedia\n    if((navigator && \"mediaDevices\" in navigator && \"getDisplayMedia\" in navigator.mediaDevices)) result.getDisplayMedia = true;\n    // check RTCPeerConnection\n    verbose && console.log(`[feature-test] Checking for rtcPeerConnection`);\n    if(\"RTCPeerConnection\" in window) result.rtcPeerConnection = true;\n    else if(\"webkitRTCPeerConnection\" in window) result.rtcPeerConnection = \"prefix-webkit\";\n    else if(\"mozRTCPeerConnection\" in window) result.rtcPeerConnection = \"prefix-moz\";\n    // check RTCDataChannel\n    if(!result.rtcPeerConnection) result.rtcDataChannel = false;\n    else {\n        verbose && console.log(`[feature-test] Checking for RTC Data Channel`);\n        let rpc = new RTCPeerConnection();\n        if(\"createDataChannel\" in rpc) result.rtcDataChannel = true; \n    }\n    return result;\n}","import peerTransfer from \"./helpers/rpc\";\nexport default function checkRelayPerformance(rtcConfig, verbose, timeout = 30000){\n    return new Promise((resolve,reject)=>{\n        if(!rtcConfig) return reject(new Error(\"RTC Config is required\"));\n        if(!/turn/.test(JSON.stringify(rtcConfig))) reject(new Error(\"At least one turn server is required\"));\n        rtcConfig.iceTransportPolicy = \"relay\"; // force TURN\n        // Construct a big payload\n        let payload = \"\";\n        for(let i=0; i<100000; i++){\n            payload += String.fromCharCode(Math.floor(255* Math.random()));\n        }\n        peerTransfer(rtcConfig, payload, verbose, timeout).then(data=>{\n            let transferSize = data.size * 8;\n            let inSeconds    = data.elapsed / 1000; \n            let speed        = ((transferSize / inSeconds) / 1048576).toFixed(2);\n            verbose && console.log(`[turn-performance] Data transfer was measured ${speed}. transfer took ${data.elapsed}ms`);\n            return resolve({\n                speed   : parseFloat(speed),\n                elapsed : data.elapsed\n            });\n        }).catch(reject);\n    });\n}","export default function(_promise){\n    return new Promise(resolve=>{\n        try{\n            _promise\n                .then(result=>resolve(result))\n                .catch(()=>resolve(null));\n        }\n        catch(e){\n            resolve(null);\n        }\n    })\n}","function addStreamToDOM(domElement,stream){\n    if(!domElement || !stream) return null;\n    if(domElement.srcObject !== undefined) domElement.srcObject = stream;\n    else domElement.src = window.URL.createObjectURL(stream);\n    return domElement;\n}\nfunction removeStreamFromDOM(domElement){\n    if(!domElement) return null;\n    if(domElement.srcObject !== undefined) domElement.srcObject = null;\n    else domElement.src = \"\";\n    return domElement;\n}\n\nmodule.exports = {\n    addStreamToDOM,\n    removeStreamFromDOM\n}","import checkPeerConnection from \"./checks/peerConnection\";\nimport checkMediaCapture from \"./checks/mediaCapture\";\nimport checkInternetSpeed from \"./checks/internet\";\nimport countDevies from \"./checks/count_devices\";\nimport checkFeatureSupport from \"./checks/feature_support\";\nimport checkRelayPerformance from \"./checks/turnPerformace\";\n// Utils\nimport flat from \"./utils/simplify_promise\";\nimport * as dom from \"./utils/dom_tag_tools\";\nimport getUserMedia from \"./utils/user_media\";\nimport * as mediaStream from \"./utils/media_stream_tools\";\nimport createRTCPeerConnection from \"./utils/peerconn\";\n// Utils function\nconst checkPeerConnectionSilent=function(rtcConfig = {}, verbose = false){return flat(checkPeerConnection(rtcConfig, verbose))};\nconst checkMediaCaptureSilent=function(constraints, verbose = false, getStream = false){return flat(checkMediaCapture(constraints, verbose, getStream))};\nconst checkInternetSpeedSilent=function(checkerFile, verbose = false){return flat(checkInternetSpeed(checkerFile, verbose))};\nconst countDeviesSilent=function(verbose = false){return flat(countDevies(verbose))};\nconst getUserMediaSilent=function(constraints, verbose = false){return flat(getUserMedia(constraints, verbose))};\nconst checkRelayPerformanceSilent=function(rtcConfig, verbose, timeout){return flat(checkRelayPerformance(rtcConfig, verbose, timeout))};\nconst utils = {\n    flat,\n    dom,\n    stream: mediaStream\n}\n// Exports\nexport {\n    checkPeerConnection,\n    checkMediaCapture,\n    checkRelayPerformance,\n    checkInternetSpeed,\n    countDevies,\n    getUserMedia,\n    checkFeatureSupport,\n    checkPeerConnectionSilent,\n    checkMediaCaptureSilent,\n    checkRelayPerformanceSilent,\n    checkInternetSpeedSilent,\n    countDeviesSilent,\n    getUserMediaSilent,\n    createRTCPeerConnection,\n    utils\n}"]}