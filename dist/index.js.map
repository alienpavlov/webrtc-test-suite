{"version":3,"sources":["checks/peerConnection.js","utils/user_media.js","utils/media_stream_tools.js","checks/mediaCapture.js","checks/internet.js","checks/count_devices.js","checks/feature_support.js","utils/simplify_promise.js","utils/dom_tag_tools.js","index.js"],"names":["checkPeerConnection","rtcConfig","verbose","Promise","resolve","reject","rtc1","RTCPeerConnection","rtc2","dc","createDataChannel","_ts","Date","now","addEventListener","ice","candidate","console","log","addIceCandidate","evt","channel","msg","data","toString","_rcvTS","close","Error","send","createOffer","then","offer","setLocalDescription","setRemoteDescription","createAnswer","answer","catch","getUserMedia","constraints","audio","video","_success","stream","_err","err","navigator","mediaDevices","webkitGetUserMedia","mozGetUserMedia","stopMediaStream","tracks","getTracks","Array","prototype","forEach","call","_track","stop","length","stopMediaStreamSilent","e","checkMediaCapture","getStream","active","audioTrack","videoTrack","functional","every","kind","readyState","_stream","checkInternetSpeed","checkerFile","fetch","startTime","glue","test","resp","status","blob","bl","endTime","timeDiff","mbps","size","toFixed","countDevices","result","in","out","unknown","enumerateDevices","devices","_d","checkFeatureSupport","basic","webAudio","rtcPeerConnection","rtcDataChannel","getDisplayMedia","document","createElement","play","window","_promise","addStreamToDOM","domElement","undefined","srcObject","src","URL","createObjectURL","removeStreamFromDOM","module","exports","checkPeerConnectionSilent","checkMediaCaptureSilent","checkInternetSpeedSilent","countDeviesSilent","getUserMediaSilent","utils","flat","dom","mediaStream"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["export default function checkPeerConnection(rtcConfig = {}, verbose = false){\n    return new Promise((resolve,reject)=>{\n        let rtc1 = new RTCPeerConnection(rtcConfig);\n        let rtc2 = new RTCPeerConnection(rtcConfig);\n        let dc   = rtc1.createDataChannel(\"sender\");\n        let _ts  = Date.now();\n        rtc1.addEventListener(\"icecandidate\",ice=>{\n            if(!ice.candidate) return false;\n            verbose && console.log(\"[peer-connection]: First Peer Generated Candidate:\",ice.candidate);\n            rtc2.addIceCandidate(ice.candidate);\n        });\n        rtc2.addEventListener(\"icecandidate\",ice=>{\n            if(!ice.candidate) return false;\n            verbose && console.log(\"[peer-connection]: Second Peer Generated Candidate:\",ice.candidate);\n            rtc1.addIceCandidate(ice.candidate);\n        });\n        rtc2.addEventListener(\"datachannel\",evt=>{\n            evt.channel.addEventListener(\"message\",(msg)=>{\n                verbose && console.log(\"[peer-connection]: Message Transmission successful\");\n                if(msg.data === _ts.toString()){\n                    let _rcvTS = Date.now();\n                    rtc1.close();\n                    rtc2.close();\n                    return resolve(_rcvTS - _ts);\n                }\n                return reject(new Error(\"message integrity failure\"));\n            });\n        });\n        dc.addEventListener(\"open\",()=>dc.send(_ts.toString()));\n        rtc1.createOffer()\n            .then(offer=>{\n                verbose && console.log(\"[peer-connection]: First peer connection created RTC offer\");\n                rtc1.setLocalDescription(offer)\n                    .then(()=>rtc2.setRemoteDescription(offer))\n                    .then(()=>rtc2.createAnswer()\n                        .then(answer=>{\n                            verbose && console.log(\"[peer-connection]: Seocond peer connection created RTC answer\");\n                            rtc2.setLocalDescription(answer)\n                                .then(rtc1.setRemoteDescription(answer))\n                                .catch(reject);\n                        }).catch(reject));\n            }).catch(reject);\n    });\n}\n","export default function getUserMedia(constraints, verbose = false){\n    return new Promise((resolve,reject)=>{\n        if(!constraints.audio && !constraints.video) return reject(new Error(\"Audio Video Constraints inappropriate\"));\n        const _success = (stream) => resolve(stream);\n        const _err     = (err) => reject(err);\n        if(navigator.mediaDevices.getUserMedia){\n            verbose && console.log(`[get-user-media]: Using mediaDevices.getUserMedia`);\n            navigator.mediaDevices.getUserMedia(constraints).then(resolve).catch(reject);\n        }\n        else if(navigator.getUserMedia){\n            verbose && console.log(`[get-user-media]: Using navigator.getUserMedia`);\n            navigator.getUserMedia(constraints, _success, _err);\n        }\n        else if(navigator.webkitGetUserMedia){\n            verbose && console.log(`[get-user-media]: Using navigator.webkitGetUserMedia`);\n            navigator.webkitGetUserMedia(constraints, _success, _err);\n        }\n        else if(navigator.mozGetUserMedia){\n            verbose && console.log(`[get-user-media]: Using navigator.mozGetUserMedia`);\n            navigator.mozGetUserMedia(constraints, _success, _err);\n        }\n        else reject(new Error(\"No version of getusermedia was found\"));\n    });\n}","function stopMediaStream(stream){\n    if(!stream) return null;\n    let tracks = stream.getTracks();\n    Array.prototype.forEach.call(tracks, _track=>_track.stop());\n    return tracks.length;\n}\nfunction stopMediaStreamSilent(stream){\n    try{\n        return stopMediaStream(stream);\n    }\n    catch(e){\n        return 0;\n    }\n}\nexport {\n    stopMediaStream,\n    stopMediaStreamSilent\n}","import getUserMedia from \"../utils/user_media\";\nimport * as _stream from \"../utils/media_stream_tools\";\nexport default function checkMediaCapture(constraints, verbose = false, getStream = false){\n    return new Promise((resolve,reject)=>{\n        if(!constraints.audio && !constraints.video) return reject(new Error(\"Constraints are not correct\"));\n        verbose && console.log(`[media-capture]: Requesting user media`);\n        getUserMedia(constraints, verbose)\n            .then(stream=>{\n                verbose && console.log(`[media-capture]: Received media Stream`);\n                if(stream.active){\n                    let tracks     = stream.getTracks();\n                    var audioTrack = false; // check by default\n                    var videoTrack = false; // check by default\n                    let functional = [].every.call(tracks,_track=>{\n                        if(_track.kind === \"audio\") audioTrack = true;\n                        if(_track.kind === \"video\") videoTrack = true;\n                        return (_track.readyState === \"live\");\n                    });\n                    verbose && console.log(`[media-capture]: Received ${tracks.length} track(s)`);\n                    if(!functional){\n                        _stream.stopMediaStream(stream);\n                        return reject(new Error(\"All requested tracks are not active\"));\n                    } \n                    if(constraints.video && !videoTrack) {\n                        _stream.stopMediaStream(stream);\n                        return reject(new Error(\"Video Track not found\"));\n                    }\n                    if(constraints.audio && !audioTrack){\n                        _stream.stopMediaStream(stream);\n                        return reject(new Error(\"Audio Track not found\"));\n                    } \n                    if(!getStream){\n                        verbose && console.log(`[media-capture]: Stopping media track(s)`);\n                        _stream.stopMediaStream(stream);\n                    }\n                    if(getStream) return resolve(stream);\n                    return resolve(true);\n                }\n            })\n            .catch(reject);\n    });\n}","export default function checkInternetSpeed(checkerFile, verbose = false){\n    return new Promise((resolve,reject)=>{\n        if(!checkerFile) return reject(new Error(\"Please provide a filename to download and check internet\"));\n        if(typeof fetch !== \"function\") return reject(new Error(\"Fetch API support is required for this check\"));\n        verbose && console.log(`[internet-connection]: Will fetch the check file`);\n        let startTime = Date.now();\n        let glue = /\\?/.test(checkerFile)?\"&\":\"?\"; // if the file path already has query params\n        fetch(`${checkerFile}${glue}rtccheckertimestamp_noconflict=${startTime}`) // to avoid cache\n            .then(resp=>{\n                if(resp.status !== 200) return reject(new Error(\"Error loading the checker file\"));\n                return resp.blob();\n            }).then(bl=>{\n                verbose && console.log(`[internet-connection]: Fetched the checker file`);\n                let endTime  = Date.now();\n                let timeDiff = (endTime - startTime) / 1000; //convert millesecond diff to seconds\n                let fileSize = bl.size * 8; // bits\n                let bps      = fileSize / timeDiff;\n                let mbps     = (bps / 1048576).toFixed(2); // 1024*1024 = 1048576\n                verbose && console.log(`[internet-connection]: Speed observed: ${mbps}mbps`);\n                return resolve(mbps);\n            })\n            .catch(reject);\n    });\n}","export default function countDevices(verbose = false){\n    return new Promise((resolve,reject)=>{\n        let result = {\n            audio   : {in: 0, out: 0},\n            video   : {in: 0, out: 0},\n            unknown : 0\n        }\n        verbose && console.log(`[count-devices]: Requesting device list`);\n        navigator.mediaDevices.enumerateDevices()\n            .then(devices=>{\n                verbose && console.log(`[count-devices]: Received device list. Total devices: ${devices.length}`);\n                Array.prototype.forEach.call(devices,_d=>{\n                    switch(_d.kind){\n                    case \"audioinput\":\n                        result.audio.in ++;\n                        break;\n                    case \"audiooutput\":\n                        result.audio.out ++;\n                        break;\n                    case \"videoinput\":\n                        result.video.in ++;\n                        break;\n                    case \"videooutput\":\n                        result.video.out ++; // doesnt work\n                        break;\n                    default:\n                        result.unknown ++;\n                    }\n                });\n                return resolve(result);\n            })\n            .catch(reject);\n    });\n}","export default function checkFeatureSupport(verbose = false){\n    let result = {\n        video             : {\n            basic   : false\n        },\n        audio             : {\n            basic    : false,\n            webAudio : false\n        },\n        rtcPeerConnection : false,\n        rtcDataChannel    : false,\n        getUserMedia      : false,\n        getDisplayMedia   : false\n    }\n    // check video\n    verbose && console.log(`[feature-test] Checking for video availability`);\n    let vid = document.createElement(\"video\");\n    if(typeof vid.play === \"function\") result.video.basic = true;\n    // check Audio\n    verbose && console.log(`[feature-test] Checking for audio availability`);\n    let aud = document.createElement(\"audio\");\n    if(typeof aud.play === \"function\") result.audio.basic    = true;\n    verbose && console.log(`[feature-test] Checking for web-audio API availability`);\n    if(\"AudioContext\" in window) result.audio.webAudio       = true;\n    else if(\"webkitAudioContext\" in window) result.audio.webAudio = \"prefix-webkit\";\n    // check getUserMedia\n    verbose && console.log(`[feature-test] Checking for getUserMedia`);\n    if((navigator && \"mediaDevices\" in navigator && \"getUserMedia\" in navigator.mediaDevices)) result.getUserMedia = true;\n    else if(navigator && \"getUserMedia\" in navigator) result.getUserMedia = \"old\";\n    else if(\"webkitGetUserMedia\" in navigator) result.getUserMedia = \"prefix-webkit\";\n    else if(\"mozGetUserMedia\" in navigator) result.getUserMedia = \"prefix-moz\";\n    // Check GetDisplayMedia\n    if((navigator && \"mediaDevices\" in navigator && \"getDisplayMedia\" in navigator.mediaDevices)) result.getDisplayMedia = true;\n    // check RTCPeerConnection\n    verbose && console.log(`[feature-test] Checking for rtcPeerConnection`);\n    if(\"RTCPeerConnection\" in window) result.rtcPeerConnection = true;\n    // check RTCDataChannel\n    if(!result.rtcPeerConnection) result.rtcDataChannel = false;\n    else {\n        verbose && console.log(`[feature-test] Checking for RTC Data Channel`);\n        let rpc = new RTCPeerConnection();\n        if(\"createDataChannel\" in rpc) result.rtcDataChannel = true; \n    }\n    return result;\n}","export default function(_promise){\n    return new Promise(resolve=>{\n        try{\n            _promise\n                .then(result=>resolve(result))\n                .catch(()=>resolve(null));\n        }\n        catch(e){\n            resolve(null);\n        }\n    })\n}","function addStreamToDOM(domElement,stream){\n    if(!domElement || !stream) return null;\n    if(domElement.srcObject !== undefined) domElement.srcObject = stream;\n    else domElement.src = window.URL.createObjectURL(stream);\n    return domElement;\n}\nfunction removeStreamFromDOM(domElement){\n    if(!domElement) return null;\n    if(domElement.srcObject !== undefined) domElement.srcObject = null;\n    else domElement.src = \"\";\n    return domElement;\n}\n\nmodule.exports = {\n    addStreamToDOM,\n    removeStreamFromDOM\n}","import checkPeerConnection from \"./checks/peerConnection\";\nimport checkMediaCapture from \"./checks/mediaCapture\";\nimport checkInternetSpeed from \"./checks/internet\";\nimport countDevies from \"./checks/count_devices\";\nimport checkFeatureSupport from \"./checks/feature_support\";\n// Utils\nimport flat from \"./utils/simplify_promise\";\nimport * as dom from \"./utils/dom_tag_tools\";\nimport getUserMedia from \"./utils/user_media\";\nimport * as mediaStream from \"./utils/media_stream_tools\";\n// Utils function\nconst checkPeerConnectionSilent=function(rtcConfig = {}, verbose = false){return flat(checkPeerConnection(rtcConfig, verbose))};\nconst checkMediaCaptureSilent=function(constraints, verbose = false, getStream = false){return flat(checkMediaCapture(constraints, verbose, getStream))};\nconst checkInternetSpeedSilent=function(checkerFile, verbose = false){return flat(checkInternetSpeed(checkerFile, verbose))};\nconst countDeviesSilent=function(verbose = false){return flat(countDevies(verbose))};\nconst getUserMediaSilent=function(constraints, verbose = false){return flat(getUserMedia(constraints, verbose))};\nconst utils = {\n    flat,\n    dom,\n    stream: mediaStream\n}\n// Exports\nexport {\n    checkPeerConnection,\n    checkMediaCapture,\n    checkInternetSpeed,\n    countDevies,\n    getUserMedia,\n    checkFeatureSupport,\n    checkPeerConnectionSilent,\n    checkMediaCaptureSilent,\n    checkInternetSpeedSilent,\n    countDeviesSilent,\n    getUserMediaSilent,\n    utils\n}"]}