{"version":3,"sources":["../checks/peerConnection.js","../checks/mediaCapture.js","../checks/internet.js","../index.js","app.js"],"names":["checkPeerConnection","rtcConfig","verbose","callback","Promise","resolve","reject","rtc1","RTCPeerConnection","rtc2","dc","createDataChannel","_ts","Date","now","_err","err","_log","console","log","arguments","addEventListener","ice","candidate","addIceCandidate","evt","channel","msg","data","toString","_rcvTS","close","Error","send","createOffer","then","offer","setLocalDescription","setRemoteDescription","createAnswer","answer","catch","e","checkMediaCapture","constraints","video","audio","navigator","mediaDevices","getUserMedia","stream","active","tracks","getTracks","audioTrack","videoTrack","functional","every","call","_track","kind","readyState","forEach","stop","checkInternetSpeed","checkerFile","startTime","fetch","resp","blob","bl","endTime","timeDiff","fileSize","size","bps","mbps","toFixed","_RTCTest","window","init"],"mappings":";;AIAA;;;;AAEA,SAASgF,IAAT,GAAe,CAEd;AFJD,ADAA,ADAA,AGAA;;AACA;;AACA;;;ADKA,ADAA,SCAShB,ADAArB,iBAAT,CCAA,CAA4BsB,CDAkE,UCA9F,EAAmE;AAAA,ADA2B,AEJ9F,IAAIa,EDIqC5E,ADAd0C,MEJf,CDIuD,ECJpD,EFI+E,mECA3C,IDAV,CCA0B;AAAA,ADAzBC,AEHtC7C,EAAAA,EFGsC6C,ECAgB1C,GDAX,EAAE,GCAkB,CDA1B,MEHlB,EAAnBH,uBADW;ADKX,ADDmD8C,AEFnDH,EAAAA,EFEmDG,KCC5C,ADDiD,EAAE,ECC/C1C,MCHM,CDGV,CAAY,ACHnBuC,UDGoBtC,OAAD,EAASC,ECLjB,IDKQ,EAAkB;AACjC,ADFiC,AEDrC0D,EAAAA,CFC0F,KCEnF,CAACC,WAAJ,ACHc,EDGG3D,ACHrB0D,MDG2B,CAAC,IAAIhC,KAAJ,CAAU,0DAAV,CAAD,CAAN;ADFqE,ADK9F,AGTe,CAAf,KFIoE9B,GDK3DF,ICLqF,eDK9F,GAAuE,qDCLO,KAAgB;ACGtF,ADHsF,ADKvB,AGJvE,IAAG,EFDkFG,ADKxDF,KGJnB8E,EDEO9D,CDH6E,CDKvB,EEF/D,ACFL,GDEoB,ECFF,WAArB,EAAkC8D,MAAM,CAACD,QAAP,GAAkBA,QAAlB,yBHIO,EAA8B;AEFhD,ADFnB,ADImE,MAA1B5E,GCJlC,IAAIE,ADIwD,EGFxD0E,KFFJ,CAAY,UAACzE,OAAD,EAASC,MAAT,EAAkB,oCDIc,KAAgB;ACH/D,ADG+D,MAATH,OCH7CY,CDGsD,GCH/D,CAAcC,GAAd,EAAkB;ACEd,ADDA,ADGR,SAAO,CEFI,ADDAb,CCCCD,EFEDE,KEFH,ADDA,ECCa,ADDA,ADGd,CAAY,MEFS,ADDAD,IDGRE,CEFC,GDDe,CAAC,EDGlB,EAASC,CCHQ,CAAf,IDGF,EAAkB;ACF7B,ADGJ,QAAIC,IAAI,CCHGD,EDGA,ICHM,ADGFE,CCHGQ,GAAD,CAAb,YDGO,EAAX;AEFI,ADAH,ADGD,QAAIP,IAAI,GAAG,GEHPS,CFGWV,MEHJ,EAACW,GAAR,MFGO,EAAX,SEHmBC,SAAf;AACH,AFGD,QAAIV,EAAE,GAAKH,IAAI,CAACI,iBAAL,CAAuB,QAAvB,CAAX;ACHA,aAASM,IAAT,GAAe;ACCf,ADDe,ADIf,QAAIL,GAAG,EEHEG,CFGEF,GEHX,CAAcG,AFGC,CAACF,EEHhB,CFGW,CEHO,CFGlB;AEFI,UAAGX,QAAH,EAAa,OAAOA,QAAQ,CAAC,KAAD,CAAf;AACb,ADFA,ADIJ,UCJO,CAACD,ECEGI,AFEFS,IAAT,CCJI,ADIUC,CEFG,CAACA,ADFD,CDIjB,EEFiB,AFEC,CEFd,GDFoB,KAAP;ACGhB,AFEG,UAAGb,QAAH,EAAa,OAAOA,QAAQ,CAAC,KAAD,CAAf;ACJb,ADKA,aAAOG,KCLPY,CDKa,CAACF,GAAD,CAAb,CCLO,EAACG,GAAR,iBAAeC,SAAf;ACGJ,ADFC,ADKA,QEHG8C,SAAS,GAAGrD,IAAI,CAACC,GAAL,EAAhB;;AACAG,ADFA8B,ADKA,IEHA9B,ADFA8B,ICEI,KDFK,ADKA9B,CCLC+B,GDKV,GAAe,MCLf,CAAuBC,YAAvB,CAAoCL,QCEpC,GDFA,EACKT,IADL,CACU,UAAAe,MAAM,EAAE;AACVjC,ADGO,MCHPA,IAAI,CAAC,sBAAD,CAAJ;ACCRkD,IAAAA,KAAK,WAAIF,WAAJ,6CAAkDC,SAAlD,EAAL,CACK/B,IADL,CACU,UAAAiC,IAAI;AAAA,ADDN,ADGJ,UCHOlB,ADGJ,CAAChD,EEFQkE,GDDC,CCCG,ADDFjB,CCCGkB,AFEjB,EAAa,EEFD,CDDR,CCCM,CDDW,EDGD,KAAP;AEFH,ADAF,KCDZ,EAEKlC,IAFL,CAEU,ADDMiB,MAAM,GAAOF,CCCnBoB,EAAE,EAAE,CDDqB,CAACjB,SAAP,EAAjB;ACEJpC,ADDI,ADER,MEDIA,IAAI,EDDIqC,MDEZpC,ICFsB,GAAG,ADElB,EAACC,GCFA,ADER,CCJqB,CAEW,eDEjBC,SAAf,EEDI;AFEP;AEDO,ADDI,UCCAmD,EDDIhB,KCCG,GAAI1C,EDDG,ECCC,CAACC,ADDC,GCCN,EAAf,ADDI,CAHa,CAGW;ACE5B,AFCRP,IAAAA,IAAI,CAACc,CEDOmD,QAAQ,GAAG,CAACD,GFCxB,CAAsB,GEDS,GAAGL,QFClC,CEDuB,CFCc,GEDQ,IAArC,CAHM,CAGqC,CFCd5C,GAAG,EAAE;ACF9B,ADGR,UAAG,CAACA,CCHQkC,EDGL,CAACjC,OCHc,EDGtB,CCHyB,CDGN,ECHSkC,KAAH,ADGC,CCHQC,IAAT,ADGN,CCHoBN,MAAd,EAAqB,UAAAO,MAAM,EAAE;ACElD,ADDQ,UCCJc,IDDOd,ICCC,EDDK,CCCFW,ADDGV,ECCD,CAACc,CDDP,GCCI,EDDY,CCCF,CAAzB,CAJM,CAIsB,GDDpB,EAA4BpB,UAAU,GAAG,IAAb;AAC5B,ADEZrC,MAAAA,IAAI,CAAC,GCFU0C,MAAM,CAACC,IAAP,KAAgB,OAAnB,EAA4BL,SDEpC,CCF8C,CDEPjC,ECFU,CDEP,CAACC,ECFP,ODEpC,CAAJ;AEDI,ADAQ,UCAJoD,GAAG,GAAQF,CDACd,MAAM,CCAC,ADAAE,GCAGW,ODAV,CCAhB,IDAsC,MAA9B;ACCR,ADAK,ADCT/D,MAAAA,GCLyB,CCIjBmE,ADJA,ADKJ,CAACpD,GEDO,GAAO,CAACmD,GAAG,GAAG,EFC1B,CAAqBrD,GAAG,CEDL,AFCMC,EEDUsD,OAAhB,AFCnB,CED2C,CAAxB,CAAf,CANM,CAMqC;ADCvCzB,ADCX,KAJD,GCGYA,MAAM,CAACU,OAAP,CAAe,UAAAH,MAAM;ACAzB1C,ADAyB,ADEjCR,IAAAA,EEFQQ,EFEJ,CAACI,CEFO,ODAuBsC,MAAM,CAACI,CDE1C,CAAsB,ECFa,EAAF,UDEjC,EAAqC,UAAAzC,GAAG,EAAE,gBEFgBsD,IAA9C,WAAJ;ADAyB,ADG7B,SCHQ,CDGL,CAACtD,GAAG,CAACC,SAAR,EAAmB,OAAO,KAAP;AEFf,ADAI,UCADpB,EDAI,CAACqD,KCAR,EAAa,GDAT,EAAgB,ECAArD,KDAOY,GCAC,CAAC6D,ADAE,CAAC,GCAJ,CAAf,ADAuB5C,KAAJ,CAAU,qCAAV,CAAD,CAAX;ACCpB,ADAI,ADERf,MAAAA,IAAI,CAAC,CCFM2B,CCAAvC,OAAO,CAACuE,EDAG,CAAC/B,CCAL,CAAd,GDAO,IAAqB,CAACU,UAAzB,EAAqC,GDEzC,EAAwCjC,ECFQP,CDEL,CAACQ,ECFQ,CAAC,IAAIS,EDEzD,CAAJ,ECFyD,CAAU,uBAAV,CAAD,CAAX;ACC5C,ADAO,KCZZ,EAaKS,KAbL,ADYeG,CCCJ7B,IAbX,MDY0B,CAAC+B,KAAZ,IAAqB,CAACQ,UAAzB,EAAqC,OAAOvC,IAAI,CAAC,IAAIiB,KAAJ,CAAU,uBAAV,CAAD,CAAX;ACEpD,ADDe,ADCRzB,GE1BD,CAAP,EF0BQA,IAAI,CAACiB,ICDUnB,OAAO,CAAC,GDCvB,CCDsB,ADCDiB,CCDb,EDCgB,CAACC,SAAzB;AECX,ADDgB,ADCR,KAJD;ACIK,ADCLd,IAAAA,CCnBA,EAmBKgC,CDAD,CAACpB,GCnBL,CAmBW,UAAAqB,CAAC,CDAZ,CCAc,ADAQ,aAAtB,EAAoC,UAAAjB,GAAG,EAAE;ACCjCR,ADAJQ,MCAIR,ADAJQ,GAAG,CCAK,ADAJC,CCAK,ICANsC,EFAH,CAAY3C,gBAAZ,CAA6B,SAA7B,EAAuC,CCA/B,CAAJ,QDAoCM,GAAD,EAAO;AAC1CV,QAAAA,IAAI,CAAC,qCAAD,CAAJ;ACAAF,MAAAA,IAAI,CAAC2B,CAAD,CAAJ;AACH,ADAG,KCtBR,ODsBWf,GAAG,CAACC,IAAJ,KAAahB,GAAG,CAACiB,QAAJ,EAAhB,EAA+B;ACC1C,ADAe,GChCT,CAAP,UDgCmB1B,QAAH,EAAa,OAAOA,QAAQ,CAAC,IAAD,CAAf;ACChC;ADAmB,cAAI2B,MAAM,GAAGjB,IAAI,CAACC,GAAL,EAAb;eCEL6B;ADDKpC,UAAAA,IAAI,CAACwB,KAAL;AACAtB,UAAAA,IAAI,CAACsB,KAAL;AACA,iBAAO1B,OAAO,CAACyB,MAAM,GAAGlB,GAAV,CAAd;AACH;;AACDG,QAAAA,IAAI,CAAC,IAAIiB,KAAJ,CAAU,2BAAV,CAAD,CAAJ;AACH,OAVD;AAWH,KAZD;AAaAtB,IAAAA,EAAE,CAACW,gBAAH,CAAoB,MAApB,EAA2B;AAAA,aAAIX,EAAE,CAACuB,IAAH,CAAQrB,GAAG,CAACiB,QAAJ,EAAR,CAAJ;AAAA,KAA3B;AACAtB,IAAAA,IAAI,CAAC2B,WAAL,GACKC,IADL,CACU,UAAAC,KAAK,EAAE;AACTnB,MAAAA,IAAI,CAAC,uBAAD,CAAJ;;AACAV,MAAAA,IAAI,CAAC8B,mBAAL,CAAyBD,KAAzB,EACKD,IADL,CACU;AAAA,eAAI1B,IAAI,CAAC6B,oBAAL,CAA0BF,KAA1B,CAAJ;AAAA,OADV,EAEKD,IAFL,CAEU;AAAA,eAAI1B,IAAI,CAAC8B,YAAL,GACLJ,IADK,CACA,UAAAK,MAAM,EAAE;AACVvB,UAAAA,IAAI,CAAC,wBAAD,CAAJ;;AACAR,UAAAA,IAAI,CAAC4B,mBAAL,CAAyBG,MAAzB,EACKL,IADL,CACU;AAAA,mBAAI5B,IAAI,CAAC+B,oBAAL,CAA0BE,MAA1B,CAAJ;AAAA,WADV,EAEKC,KAFL,CAEW,UAAAC,CAAC;AAAA,mBAAE3B,IAAI,CAAC2B,CAAD,CAAN;AAAA,WAFZ;AAGH,SANK,EAMHD,KANG,CAMG,UAAAC,CAAC;AAAA,iBAAE3B,IAAI,CAAC2B,CAAD,CAAN;AAAA,SANJ,CAAJ;AAAA,OAFV;AASH,KAZL,EAYOD,KAZP,CAYa,UAAAC,CAAC;AAAA,aAAE3B,IAAI,CAAC2B,CAAD,CAAN;AAAA,KAZd;AAaH,GAlDM,CAAP;AAmDH;;eAEc1C","file":"app.c328ef1a.js","sourceRoot":"../test","sourcesContent":["/**\n * Created By Anam Ahmed (https://anam.co)\n * Test the browser's capability to establish RTCPeerConnection with supplied RTC Configuration\n * How to use: probeRTC(RTCParam,false, callback) // will call callback function with true or false.\n * If you don't supply the callback function it will return a Promise.\n * The promise will resolve (with total time required for the whole round trip ,in ms) or reject (with error) based on the result.\n * Setting verbose = true will print logs in console\n * @param {RTCConfiguration} rtcConfig\n * @param {Boolean} verbose\n * @param {Function} callback [optional]\n * @return {Promise}\n */\nfunction checkPeerConnection(rtcConfig = {}, verbose = false, callback){\n    return new Promise((resolve,reject)=>{\n        let rtc1 = new RTCPeerConnection();\n        let rtc2 = new RTCPeerConnection();\n        let dc   = rtc1.createDataChannel(\"sender\");\n        let _ts  = Date.now();\n        function _err(err){\n            if(callback) return callback(false);\n            return reject(err);\n        }\n        function _log(){\n            if(!verbose) return false;\n            console.log(...arguments);\n        }\n        rtc1.addEventListener(\"icecandidate\",ice=>{\n            if(!ice.candidate) return false;\n            _log(\"🚖  First Peer Generated Candidate:\",ice.candidate);\n            rtc2.addIceCandidate(ice.candidate);\n        });\n        rtc2.addEventListener(\"icecandidate\",ice=>{\n            if(!ice.candidate) return false;\n            _log(\"🚖  Second Peer Generated Candidate:\",ice.candidate);\n            rtc1.addIceCandidate(ice.candidate);\n        });\n        rtc2.addEventListener(\"datachannel\",evt=>{\n            evt.channel.addEventListener(\"message\",(msg)=>{\n                _log(\"✉️  Message Transmission successful\");\n                if(msg.data === _ts.toString()){\n                    if(callback) return callback(true);\n                    let _rcvTS = Date.now();\n                    rtc1.close();\n                    rtc2.close();\n                    return resolve(_rcvTS - _ts);\n                }\n                _err(new Error(\"message integrity failure\"));\n            });\n        });\n        dc.addEventListener(\"open\",()=>dc.send(_ts.toString()));\n        rtc1.createOffer()\n            .then(offer=>{\n                _log(\"🍎  Created RTC Offer\");\n                rtc1.setLocalDescription(offer)\n                    .then(()=>rtc2.setRemoteDescription(offer))\n                    .then(()=>rtc2.createAnswer()\n                        .then(answer=>{\n                            _log(\"🍏  Created RTC Answer\");\n                            rtc2.setLocalDescription(answer)\n                                .then(()=>rtc1.setRemoteDescription(answer))\n                                .catch(e=>_err(e));\n                        }).catch(e=>_err(e)));\n            }).catch(e=>_err(e));\n    });\n}\n\nexport default checkPeerConnection;\n","/**\n * Tests media capture by calling getUserMedia and analyzing the media stream\n * Created by Anam Ahmed (https://anam.co)\n * @param {MediaStreamConstraints} constraints\n * @param {Boolean} verbose\n * @param {Function} callback\n */\nfunction checkMediaCapture(constraints = {video: true, audio: true},verbose = false, callback){\n    return new Promise((resolve,reject)=>{\n        function _err(err){\n            if(callback) return callback(false);\n            return reject(err);\n        }\n        function _log(){\n            if(!verbose) return false;\n            console.log(...arguments);\n        }\n        navigator.mediaDevices.getUserMedia(constraints)\n            .then(stream=>{\n                _log(\"🏞  Got Media stream\");\n                if(stream.active){\n                    let tracks     = stream.getTracks();\n                    var audioTrack = false; // check by default\n                    var videoTrack = false; // check by default\n                    let functional = [].every.call(tracks,_track=>{\n                        if(_track.kind === \"audio\") audioTrack = true;\n                        if(_track.kind === \"video\") videoTrack = true;\n                        return (_track.readyState === \"live\");\n                    });\n                    tracks.forEach(_track=>_track.stop());\n                    if(!functional) return _err(new Error(\"All requested tracks are not active\"));\n                    if(constraints.video && !videoTrack) return _err(new Error(\"Video Track not found\"));\n                    if(constraints.audio && !audioTrack) return _err(new Error(\"Audio Track not found\"));\n                    return resolve(true);\n                }\n            })\n            .catch(e=>{\n                _log(\"🛑  Failed at getting media stream\");\n                _err(e);\n            })\n    })\n}\n\nexport default checkMediaCapture;","/**\n * Test Internet download speed\n * @param {checkFile} String, a file on the internet, that can be downloaded via AJAX (has access-control-allow-origin header)\n * @param {verbose} Boolean, prints out logs\n * @param {callback} Function, gets called once the function finishes or fails\n * @returns Promise\n */\nfunction checkInternetSpeed(checkerFile, verbose = false, callback){\n    return new Promise((resolve,reject)=>{\n        if(!checkerFile) reject(new Error(\"Please provide a filename to download and check internet\"));\n        function _log(){\n            if(!verbose) return false;\n            console.log(...arguments);\n        }\n        function _err(err){\n            if(callback) return callback(false);\n            return reject(err);\n        }\n        let startTime = Date.now();\n        _log(`🧲  Fetching the test file`);\n        fetch(`${checkerFile}?rtccheckertimestamp_noconflict=${startTime}`)\n            .then(resp=>resp.blob())\n            .then(bl=>{\n                _log(`😇  Test file fetched successfully`);\n                let endTime  = Date.now();\n                let timeDiff = (endTime - startTime)/1000; //convert millesecond diff to seconds\n                let fileSize = bl.size * 8; // bits\n                let bps      = fileSize / timeDiff;\n                let mbps     = (bps / 1048576).toFixed(2); // 1024*1024\n                _log(`🌎  Internet speed observed during fetch: ${mbps} Mbps`);\n                if(callback) return callback(mbps);\n                return resolve(mbps);\n            })\n            .catch(_err);\n    })\n}\n\nexport default checkInternetSpeed;","import checkPeerConnection from \"./checks/peerConnection\";\nimport checkMediaCapture from \"./checks/mediaCapture\";\nimport checkInternetSpeed from \"./checks/internet\";\nlet _RTCTest = {\n    checkPeerConnection,\n    checkMediaCapture,\n    checkInternetSpeed\n}\nif(typeof window !== \"undefined\") window._RTCTest = _RTCTest;\n\nexport default _RTCTest;","import _test from \"../index\";\n\nfunction init(){\n    \n}\n\n\n"]}